================================================================================
                            MyShell 用户手册
================================================================================

作者：操作系统课程项目
日期：2024-12-19
版本：1.0

================================================================================
目录
================================================================================

1. 简介
2. 编译和运行
3. 内部命令详解
4. 外部程序执行
5. I/O 重定向
6. 后台执行
7. 批处理模式
8. 环境变量
9. 综合使用示例
10. 注意事项和限制

================================================================================
1. 简介
================================================================================

MyShell 是一个简单的命令行解释器（Shell），用于在 Linux 系统上执行命令。
它提供了基本的 Shell 功能，包括：

  - 8 个内部命令（cd、clr、dir、environ、echo、help、pause、quit）
  - 执行外部程序
  - I/O 重定向（输入、输出、追加）
  - 后台执行
  - 批处理模式

MyShell 适合学习操作系统原理和 Shell 编程的初学者使用。

================================================================================
2. 编译和运行
================================================================================

2.1 编译
--------
在项目目录下执行：

    make

这将生成可执行文件 myshell。

2.2 运行
--------
交互模式（从键盘输入命令）：

    ./myshell

批处理模式（从文件读取命令）：

    ./myshell batchfile

其中 batchfile 是包含命令的文本文件。

2.3 退出
--------
在 MyShell 提示符下输入：

    quit

================================================================================
3. 内部命令详解
================================================================================

3.1 cd - 改变当前目录
---------------------
功能：改变当前工作目录

语法：
    cd [directory]

参数：
    directory - 目标目录路径（可选）

说明：
    - 如果不提供参数，显示当前目录
    - 如果提供目录路径，切换到该目录
    - 成功切换后，PWD 环境变量会自动更新

示例：
    cd /tmp          # 切换到 /tmp 目录
    cd ..            # 切换到上级目录
    cd ~             # 切换到用户主目录
    cd               # 显示当前目录

3.2 clr - 清屏
--------------
功能：清除屏幕内容

语法：
    clr

说明：
    使用 ANSI 转义序列清除屏幕并将光标移到左上角

示例：
    clr

3.3 dir - 列出目录内容
----------------------
功能：列出目录中的文件和子目录

语法：
    dir [directory]

参数：
    directory - 要列出的目录路径（可选）

说明：
    - 如果不提供参数，列出当前目录内容
    - 如果提供目录路径，列出该目录内容
    - 支持输出重定向

示例：
    dir              # 列出当前目录
    dir /etc         # 列出 /etc 目录
    dir > list.txt   # 将目录内容保存到文件

3.4 environ - 列出环境变量
--------------------------
功能：显示所有环境变量

语法：
    environ

说明：
    列出当前 Shell 的所有环境变量及其值

示例：
    environ
    environ | grep PATH    # 配合外部程序使用

3.5 echo - 输出文本
-------------------
功能：在屏幕上显示文本

语法：
    echo <text>

参数：
    text - 要显示的文本内容

说明：
    - 可以输出多个参数，参数之间用空格分隔
    - 支持输出重定向

示例：
    echo Hello World
    echo 这是一条消息
    echo test > output.txt

3.6 help - 显示帮助
-------------------
功能：显示用户手册

语法：
    help

说明：
    - 如果 readme 文件存在，使用 more 命令分页显示
    - 如果 readme 不存在，显示简短的内置帮助信息

示例：
    help

3.7 pause - 暂停
----------------
功能：暂停 Shell 操作

语法：
    pause

说明：
    暂停 Shell 直到用户按下回车键

示例：
    pause

3.8 quit - 退出
---------------
功能：退出 MyShell

语法：
    quit

说明：
    退出 Shell 程序，返回到系统 Shell

示例：
    quit

================================================================================
4. 外部程序执行
================================================================================

MyShell 可以执行系统中的任何外部程序。

语法：
    program [arguments]

说明：
    - program 是程序名或程序路径
    - arguments 是传递给程序的参数
    - 程序必须在 PATH 环境变量指定的目录中，或使用完整路径

示例：
    ls -l                    # 列出文件详细信息
    ps aux                   # 显示所有进程
    date                     # 显示当前日期和时间
    /bin/echo test           # 使用完整路径执行程序
    cat readme               # 查看文件内容

================================================================================
5. I/O 重定向
================================================================================

MyShell 支持输入输出重定向，可以将命令的输入输出重定向到文件。

5.1 输入重定向 <
----------------
将文件内容作为命令的输入

语法：
    command < inputfile

示例：
    cat < readme             # 从 readme 文件读取内容
    wc -l < myshell.c        # 统计文件行数

5.2 输出重定向 >（覆盖模式）
----------------------------
将命令输出保存到文件，如果文件存在则覆盖

语法：
    command > outputfile

示例：
    echo Hello > test.txt    # 将 Hello 写入文件
    dir > filelist.txt       # 将目录列表保存到文件
    ls -l > output.txt       # 将 ls 输出保存到文件

5.3 输出重定向 >>（追加模式）
-----------------------------
将命令输出追加到文件末尾，如果文件不存在则创建

语法：
    command >> outputfile

示例：
    echo World >> test.txt   # 将 World 追加到文件
    dir >> filelist.txt      # 将目录列表追加到文件

5.4 组合使用
------------
可以同时使用输入和输出重定向

示例：
    cat < input.txt > output.txt    # 复制文件

================================================================================
6. 后台执行
================================================================================

MyShell 支持后台执行程序，允许在程序运行时继续使用 Shell。

语法：
    command &

说明：
    - 在命令末尾添加 & 符号
    - Shell 会显示后台进程的 PID
    - Shell 立即返回提示符，不等待程序结束

示例：
    sleep 10 &               # 在后台休眠 10 秒
    ls -l &                  # 在后台列出文件

注意：
    - 后台进程的输出仍会显示在终端
    - 建议将后台进程的输出重定向到文件

综合示例：
    sleep 10 > /dev/null &   # 后台执行且不显示输出

================================================================================
7. 批处理模式
================================================================================

MyShell 可以从文件中读取并执行命令。

7.1 创建批处理文件
------------------
使用文本编辑器创建包含命令的文件，每行一个命令。

示例文件 batch.txt：
    echo 开始批处理
    cd /tmp
    dir
    echo 批处理完成

7.2 运行批处理文件
------------------
    ./myshell batch.txt

说明：
    - Shell 会逐行读取并执行文件中的命令
    - 执行完所有命令后自动退出
    - 批处理文件中可以使用所有 Shell 功能

================================================================================
8. 环境变量
================================================================================

8.1 shell 环境变量
------------------
MyShell 会自动设置 shell 环境变量，其值为 MyShell 程序的完整路径。

查看方法：
    environ | grep shell

8.2 PWD 环境变量
----------------
当前工作目录，使用 cd 命令切换目录时会自动更新。

查看方法：
    environ | grep PWD

================================================================================
9. 综合使用示例
================================================================================

示例 1：文件操作
----------------
    echo 第一行 > test.txt
    echo 第二行 >> test.txt
    cat test.txt

示例 2：目录浏览
----------------
    cd /etc
    dir > /tmp/etc_files.txt
    cd /tmp
    cat etc_files.txt

示例 3：后台任务
----------------
    sleep 5 &
    echo 后台任务已启动
    # Shell 立即返回，5 秒后后台任务结束

示例 4：批处理
--------------
创建文件 backup.txt：
    echo 开始备份
    dir > backup_list.txt
    echo 备份完成

运行：
    ./myshell backup.txt

================================================================================
10. 注意事项和限制
================================================================================

10.1 限制
---------
    - 最大命令行长度：1024 字符
    - 最大参数数量：64 个
    - 不支持管道（|）
    - 不支持命令历史记录
    - 不支持 Tab 键自动补全

10.2 注意事项
-------------
    - 命令和参数之间必须用空格或制表符分隔
    - 重定向符号（<、>、>>）和文件名之间必须有空格
    - 后台执行符号（&）必须是命令行的最后一个元素
    - 批处理文件必须是纯文本格式

10.3 错误处理
-------------
    - 如果命令不存在，会显示错误信息
    - 如果文件无法打开，会显示错误原因
    - 如果目录不存在，cd 命令会显示错误

================================================================================
结束
================================================================================

感谢使用 MyShell！

如有问题或建议，请联系项目作者。

